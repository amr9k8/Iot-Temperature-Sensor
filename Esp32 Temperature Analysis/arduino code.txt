#ifdef ESP32
  #include <WiFi.h>
  #include <HTTPClient.h>
  #include <Arduino_JSON.h>
#else
  #include <ESP8266WiFi.h>
  #include <ESP8266HTTPClient.h>
  #include <WiFiClient.h>
  #include <HTTPClient.h>
#endif

//Variables for  WIFI & SERVER CONNECTION

#define WIFI_SSID "Sprint"
#define PASSWORD "Eng2014@"
String outputsState;
const char* Statues_URL = "http://tempsensor.atwebpages.com/esp-post-data.php?action=get_states";//get request
String apiKeyValue = "123123";
String sensorName = "tmp";
String sensorLocation = "myroom";
const char* POST_TEMP_URL = "http://tempsensor.atwebpages.com/esp-post-data.php/";//post request


//Variables for  LED 
const int led_gpio =  32; 


//Delay Time Config
const long interval = 5000;


//Variables for  TemP Sensor
const int sensor_gpio =  35; 
float Tempreture=0;
int statues ;

void setup() {
  Serial.begin(9600);
  WiFi.begin(WIFI_SSID, PASSWORD);
  Serial.print("Connecting to Wi-Fi");
  while (WiFi.status() != WL_CONNECTED)
  {
    Serial.print(".");
    delay(300);
  }
  Serial.println();
  Serial.print("Connected with IP: ");
  Serial.println(WiFi.localIP());
  Serial.println();
  
  pinMode(sensor_gpio , INPUT) ; 
  pinMode(led_gpio, OUTPUT);
}

void loop() {
  
     // Check WiFi connection status
    if(WiFi.status()== WL_CONNECTED ){ 
      statues = httpGETRequest(Statues_URL);
      digitalWrite(sensor_gpio, statues);
      digitalWrite(led_gpio, statues);
  
  if(  statues == 1){
   Tempreture = ReadTemp(sensor_gpio);
   String result =  httpPOSTRequest(POST_TEMP_URL,Tempreture);
   Serial.print("POST Request: ");
   Serial.println(result);
  }
  else if (statues == 0){
    Serial.print("Tempreture Sensor  is  OFF ");
    Serial.println();
  }
  
    }
    else {
      Serial.println("WiFi Disconnected");
    }
    delay(500);
}

int httpGETRequest(const char* serverName) {
  WiFiClient client;
  HTTPClient http;
  http.begin(client, serverName);
  int httpResponseCode = http.GET();
  String Sensor_statues = ""; 
  if (httpResponseCode>0) {
    Sensor_statues = http.getString();
  }
  else {
    Serial.print("Error code: ");
    Serial.println(httpResponseCode);
  }
  // Free resources
  http.end();

  return Sensor_statues.toInt();
}

String httpPOSTRequest(const char* serverName,float temp) {
  WiFiClient client;
  HTTPClient http;
  http.begin(client, serverName);
   
    // Specify content-type header
    http.addHeader("Content-Type", "application/x-www-form-urlencoded");

    // Prepare your HTTP POST request data
    String Data = "api_key=123123&sensor=tmp&location=myroom&value1="+String(temp);

    // Send HTTP POST request
    int httpResponseCode = http.POST(Data);
    
     // Free resources
     http.end();
      
     if(httpResponseCode>0)
      return Data;

      return "ERROR IN POST REQUEST";
}

float ReadTemp(const int input) {
    float temp =0; 
      while(1)
    {
      if(temp > 17 && temp <30)
        return temp;
      temp  = analogRead(input);
      temp =  (temp * (5.0/1024)*100) ; 
    }

}


 